version: "3"
services:
  service-discovery:
    build:
      context: ./service-discovery
    image: service-discovery
    container_name: service-discovery
    restart: on-failure
    ports:
      - "8761:8761"
    networks:
      - clinicboard

  gateway-service:
    build:
      context: ./gateway
    image: gateway-service
    container_name: gateway-service
    restart: on-failure
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8761/eureka/
    ports:
      - "8080:8080"
    networks:
      - clinicboard
    depends_on:
      - service-discovery

  redis:
    image: redis
    container_name: clinicboard-redis
    restart: on-failure
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    networks:
      - clinicboard

  rabbitmq:
    image: "rabbitmq:3.8.6-management"
    container_name: rabbitmq
    restart: on-failure
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - clinicboard

  user-service:
    build:
      context: ./user-service
    image: user-service
    container_name: user-service
    restart: on-failure
    environment:
      - JWT_SECRET=clinicboard-ms-secret
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8761/eureka/
      - DATABASE_URL=jdbc:postgresql://${PGHOST}/${PGDATABASE}?user=${PGUSER}&password=${PGPASSWORD}&sslmode=require
      - DATABASE_USER=${PGUSER}
      - DATABASE_PASSWORD=${PGPASSWORD}
    ports:
      - "8081:8081"
    networks:
      - clinicboard
    depends_on:
      - service-discovery
      - gateway-service

  business-service:
    build:
      context: ./business-service
    image: business-service
    container_name: business-service
    restart: on-failure
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8761/eureka/
      - DATABASE_URL=jdbc:postgresql://${PGHOST}/${PGDATABASE}?user=${PGUSER}&password=${PGPASSWORD}&sslmode=require
      - DATABASE_USER=${PGUSER}
      - DATABASE_PASSWORD=${PGPASSWORD}
      - RABBITMQ_HOST=rabbitmq
    ports:
      - "8082:8082"
    networks:
      - clinicboard
    depends_on:
      - service-discovery
      - rabbitmq
      - gateway-service

  notification-service:
    build:
      context: ./notification-service
    image: notification-service
    container_name: notification-service
    restart: on-failure
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8761/eureka/
      - RABBITMQ_ADDRESS=${RABBITMQ_ADDRESS}
      - RABBITMQ_QUEUE=${RABBITMQ_QUEUE}
      - RABBITMQ_HOST=rabbitmq
    ports:
      - "8083:8083"
    networks:
      - clinicboard
    depends_on:
      - service-discovery
      - rabbitmq
      - gateway-service

  bff:
    build:
      context: ./bff
    image: bff
    container_name: bff
    restart: on-failure
    environment:
      - NODE_ENV=production
      - GATEWAY_URL=http://gateway-service:8080
    ports:
      - 3002:3002
    networks:
      - clinicboard
    depends_on:
      - service-discovery
      - gateway-service
      - user-service
      - business-service
      - notification-service
      - redis

  # Tracking
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - clinicboard

  # MÃ©tricas
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./_observability/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - clinicboard

  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./_observability/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
    ports:
      - "3000:3000"
    networks:
      - clinicboard

  # Logs
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    networks:
      - clinicboard

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers
      - ./_observability/promtail/config.yml:/etc/promtail/config.yml
    networks:
      - clinicboard

networks:
  clinicboard:
    driver: bridge

volumes:
  redis_data:
  rabbitmq_data:
  grafana-storage:
